{"ast":null,"code":"var _jsxFileName = \"C:\\\\book\\\\book\\\\src\\\\Books.js\";\nimport React, { Component } from 'react';\nimport SearchArea from './SearchArea';\nimport request from 'superagent';\nimport BookList from './BookList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Books extends Component {\n  constructor(props) {\n    super(props);\n    // searchBook = (e) => {\n    //     e.preventDefault();\n    //     const xhr = new XMLHttpRequest();\n    //     const url = `https://www.googleapis.com/books/v1/volumes?q=${this.state.searchField}`;\n    //     xhr.open(\"GET\", url, true); // 비동기 요청 설정\n    //     xhr.onreadystatechange = () => {\n    //         if (xhr.readyState === 4 && xhr.status === 200) {\n    //             const data = JSON.parse(xhr.responseText);\n    //             console.log(data); // 받아온 데이터 출력 (디버그용)\n    //             this.setState({ books: [...(data.items || [])] }); // books 상태에 API 응답 데이터 저장\n    //         } else if (xhr.readyState === 4) {\n    //             console.error(\"Error fetching books:\", xhr.statusText);\n    //         }\n    //     };\n    //     xhr.send(); // 요청 전송\n    // }\n    this.searchBook = e => {\n      e.preventDefault();\n      if (!this.state.searchField.trim()) {\n        console.error(\"검색어를 입력하세요.\"); // 사용자에게 알림\n        return; // 검색어가 없으면 요청을 보내지 않음\n      }\n      request.get(\"https://www.googleapis.com/books/v1/volumes\") // GET 요청\n      .query({\n        q: this.state.searchField\n      }) // 유효한 쿼리 파라미터 추가\n      .then(res => {\n        console.log(res.Object); // 응답 데이터를 콘솔에 출력\n        this.setState({\n          books: [...res.Object.items]\n        }); // 응답 데이터를 상태에 저장\n      }).catch(err => {\n        console.error(\"Error fetching books:\", err); // 에러 처리\n      });\n    };\n    this.handleSearch = e => {\n      console.log(e.target.value); // 디버그용\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n    this.state = {\n      books: [],\n      searchField: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchArea, {\n        searchBook: this.searchBook,\n        handleSearch: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BookList, {\n        books: this.state.books\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Books;","map":{"version":3,"names":["React","Component","SearchArea","request","BookList","jsxDEV","_jsxDEV","Books","constructor","props","searchBook","e","preventDefault","state","searchField","trim","console","error","get","query","q","then","res","log","Object","setState","books","items","catch","err","handleSearch","target","value","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/book/book/src/Books.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport SearchArea from './SearchArea';\r\nimport request from 'superagent';\r\nimport BookList from './BookList';\r\n\r\nclass Books extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    // searchBook = (e) => {\r\n    //     e.preventDefault();\r\n    \r\n    //     const xhr = new XMLHttpRequest();\r\n    //     const url = `https://www.googleapis.com/books/v1/volumes?q=${this.state.searchField}`;\r\n    \r\n    //     xhr.open(\"GET\", url, true); // 비동기 요청 설정\r\n    //     xhr.onreadystatechange = () => {\r\n    //         if (xhr.readyState === 4 && xhr.status === 200) {\r\n    //             const data = JSON.parse(xhr.responseText);\r\n    //             console.log(data); // 받아온 데이터 출력 (디버그용)\r\n    //             this.setState({ books: [...(data.items || [])] }); // books 상태에 API 응답 데이터 저장\r\n    //         } else if (xhr.readyState === 4) {\r\n    //             console.error(\"Error fetching books:\", xhr.statusText);\r\n    //         }\r\n    //     };\r\n    //     xhr.send(); // 요청 전송\r\n    // }\r\n    \r\n    searchBook = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if (!this.state.searchField.trim()) {\r\n            console.error(\"검색어를 입력하세요.\"); // 사용자에게 알림\r\n            return; // 검색어가 없으면 요청을 보내지 않음\r\n        } \r\n\r\n        request\r\n            .get(\"https://www.googleapis.com/books/v1/volumes\")  // GET 요청\r\n            .query({ q: this.state.searchField }) // 유효한 쿼리 파라미터 추가\r\n            .then((res) => {\r\n                console.log(res.Object);  // 응답 데이터를 콘솔에 출력\r\n                this.setState({ books: [...res.Object.items] });  // 응답 데이터를 상태에 저장\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error fetching books:\", err); // 에러 처리\r\n        });\r\n    }\r\n\r\n    handleSearch = (e) => {\r\n        console.log(e.target.value); // 디버그용\r\n        this.setState({ searchField: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchArea searchBook={this.searchBook} handleSearch={this.handleSearch} />\r\n                <BookList books={this.state.books} />\r\n            </div>\r\n        );\r\n    }  \r\n}\r\n\r\nexport default Books;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,SAASN,SAAS,CAAC;EAE1BO,WAAWA,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IAOhB;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA,KAEAC,UAAU,GAAIC,CAAC,IAAI;MACfA,CAAC,CAACC,cAAc,CAAC,CAAC;MAElB,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,WAAW,CAACC,IAAI,CAAC,CAAC,EAAE;QAChCC,OAAO,CAACC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC;MACZ;MAEAd,OAAO,CACFe,GAAG,CAAC,6CAA6C,CAAC,CAAE;MAAA,CACpDC,KAAK,CAAC;QAAEC,CAAC,EAAE,IAAI,CAACP,KAAK,CAACC;MAAY,CAAC,CAAC,CAAC;MAAA,CACrCO,IAAI,CAAEC,GAAG,IAAK;QACXN,OAAO,CAACO,GAAG,CAACD,GAAG,CAACE,MAAM,CAAC,CAAC,CAAE;QAC1B,IAAI,CAACC,QAAQ,CAAC;UAAEC,KAAK,EAAE,CAAC,GAAGJ,GAAG,CAACE,MAAM,CAACG,KAAK;QAAE,CAAC,CAAC,CAAC,CAAE;MACtD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACZb,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEY,GAAG,CAAC,CAAC,CAAC;MACrD,CAAC,CAAC;IACN,CAAC;IAAA,KAEDC,YAAY,GAAInB,CAAC,IAAK;MAClBK,OAAO,CAACO,GAAG,CAACZ,CAAC,CAACoB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC7B,IAAI,CAACP,QAAQ,CAAC;QAAEX,WAAW,EAAEH,CAAC,CAACoB,MAAM,CAACC;MAAM,CAAC,CAAC;IAClD,CAAC;IAhDG,IAAI,CAACnB,KAAK,GAAG;MACTa,KAAK,EAAE,EAAE;MACTZ,WAAW,EAAE;IACjB,CAAC;EACL;EA8CAmB,MAAMA,CAAA,EAAG;IACL,oBACI3B,OAAA;MAAA4B,QAAA,gBACI5B,OAAA,CAACJ,UAAU;QAACQ,UAAU,EAAE,IAAI,CAACA,UAAW;QAACoB,YAAY,EAAE,IAAI,CAACA;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5EhC,OAAA,CAACF,QAAQ;QAACsB,KAAK,EAAE,IAAI,CAACb,KAAK,CAACa;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAEd;AACJ;AAEA,eAAe/B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}